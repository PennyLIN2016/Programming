# Write your MySQL query statement below
# SQL schema
"""
Create table If Not Exists Scores (id int, score DECIMAL(3,2))
Truncate table Scores
insert into Scores (id, score) values ('1', '3.5')
insert into Scores (id, score) values ('2', '3.65')
insert into Scores (id, score) values ('3', '4.0')
insert into Scores (id, score) values ('4', '3.85')
insert into Scores (id, score) values ('5', '4.0')
insert into Scores (id, score) values ('6', '3.65')
"""
# Runtime: 258 ms, faster than 75.29% of MySQL online submissions for Rank Scores.
# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Rank Scores.
# The scores should be ranked from the highest to the lowest. -- ORDER BY score DESC
# If there is a tie between two scores, both should have the same ranking. -- not row_number()
# After a tie, the next ranking number should be the next consecutive integer value.
# In other words, there should be no holes between ranks -- not rank()
# use DENSE_RANK() to generate rank value
WITH Ranks AS
    (
    SELECT
        score,
        DENSE_RANK() OVER(ORDER BY score DESC) AS 'RANK'
    FROM Scores
    )
SELECT * FROM Ranks
