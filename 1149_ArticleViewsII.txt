# Write your MySQL query statement below
# SQL schema
"""
Create table If Not Exists Views (article_id int, author_id int, viewer_id int, view_date date)
Truncate table Views
insert into Views (article_id, author_id, viewer_id, view_date) values ('1', '3', '5', '2019-08-01')
insert into Views (article_id, author_id, viewer_id, view_date) values ('3', '4', '5', '2019-08-01')
insert into Views (article_id, author_id, viewer_id, view_date) values ('1', '3', '6', '2019-08-02')
insert into Views (article_id, author_id, viewer_id, view_date) values ('2', '7', '7', '2019-08-01')
insert into Views (article_id, author_id, viewer_id, view_date) values ('2', '7', '6', '2019-08-02')
insert into Views (article_id, author_id, viewer_id, view_date) values ('4', '7', '1', '2019-07-22')
insert into Views (article_id, author_id, viewer_id, view_date) values ('3', '4', '4', '2019-07-21')
insert into Views (article_id, author_id, viewer_id, view_date) values ('3', '4', '4', '2019-07-21')
"""
# Write your MySQL query statement below
# solution 1
# Runtime: 386 ms, faster than 86.60% of MySQL online submissions for Article Views II.
#Memory Usage: 0B, less than 100.00% of MySQL online submissions for Article Views II.
select id
from
    (
    select
        distinct viewer_id as id,
        count(distinct article_id) as count
    from Views
    group by view_date, viewer_id) countView
where countView.count > 1
order by countView.id

#solution 2
#Runtime: 2377 ms, faster than 5.05% of MySQL online submissions for Article Views II.
#Memory Usage: 0B, less than 100.00% of MySQL online submissions for Article Views II.
# use group by + having to define a where clause
select distinct viewer_id as id
from Views
group by viewer_id, view_date
having count(distinct article_id) > 1
order by viewer_id


